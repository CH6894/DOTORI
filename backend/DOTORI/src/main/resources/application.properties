spring.application.name=DOTORI

server.port=8081

# 학원 데이터베이스
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3307/campus_25SW_CX_p3_1
# spring_db : 스키마 이름
spring.datasource.username=campus_25SW_CX_p3_1
spring.datasource.password=smhrd1

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql = true

# item 데이터 넣기위한 코드, 데이터 넣은 후엔 false로 수정하기
app.seed.enabled=false


# 파일 업로드 설정(글쓰기 시 서버에 이미지 저장하기 위함)
spring.servlet.multipart.enabled=true
# 한 파일의 용량-> 최대 10MB까지만 허용
spring.servlet.multipart.max-file-size = 20MB
# 한 번에 처리될 수 있는 용량
spring.servlet.multipart.max-request-size = 20MB
# 이미지 업로드 시 저장 될 폴더
file.upload-dir = /home/git/upload
spring.h2.console.enabled=true
app.upload-dir=uploads

# OAuth2 - Naver
spring.security.oauth2.client.registration.naver.client-id=3J_9EIeTfTEup01jihZe
spring.security.oauth2.client.registration.naver.client-secret=75AlS9iP6p
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# \uB85C\uADF8\uC778 \uC131\uACF5 \uC2DC \uD504\uB860\uD2B8 \uCF5C\uBC31
app.oauth2.success-redirect=http://localhost:5173/oauth2/callback
app.jwt.secret=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#%^&*()-_=+
app.jwt.expiration-seconds=2592000

logging.level.org.springframework.security=DEBUG 

logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.springframework.security.web.util.matcher=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG

# === NCP Object Storage 설정 ===
ncp.storage.enabled=true
ncp.storage.endpoint=https://kr.object.ncloudstorage.com
ncp.storage.region=kr-standard
ncp.storage.access-key=${NCP_ACCESS_KEY:ncp_iam_BPASKR33C9Ue8I3sSSOH}
ncp.storage.secret-key=${NCP_SECRET_KEY:ncp_iam_BPKSKRUpgBQ1K4Cd8fsLYtxrZfN3T8rAie}
ncp.storage.bucket=dotori-item-images
